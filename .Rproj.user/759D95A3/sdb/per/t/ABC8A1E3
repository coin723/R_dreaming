{
    "contents" : "#install.packages('maps')\nlibrary(maps)\nlibrary(ggplot2)\n\nasia = map_data('world', region = c('Japan', 'China', 'North Korea', 'South Korea'))\nggplot(asia, aes(x = long, y = lat, group = group)) + \n  geom_polygon(fill = 'white', colour = 'black')\ninstall.packages('mapproj')\nlibrary(mapproj)\nggplot(asia, aes(x = long, y = lat, group = group)) + \n  geom_polygon(fill = 'white', colour = 'black') + \n  coord_map()\nggplot(asia, aes(x = long, y = lat, group = group)) + \n  geom_polygon(fill = 'white', colour = 'black') + \n  coord_map(\"polyconic\")\n\n#install.packages('ggmap')\n#install.packages('sp')\n#install.packages('/private/var/folders/r8/3sydlygj32s3qvqplmg5kzt00000gn/T/Rtmp7x2HQC/downloaded_packages/ggmap_2.5.2.tgz', repos = NULL, type = \"source\")\n#install.packages('/private/var/folders/r8/3sydlygj32s3qvqplmg5kzt00000gn/T/Rtmp7x2HQC/downloaded_packages/sp_1.2-0.tar.gz', repos = NULL, type = \"source\")\nlibrary(ggmap)\n\ngeocode('Seoul', source = 'google')\ngeocode('Seoul', source = 'google', output = 'latlona')\ngeocode(enc2utf8('서울'), source = 'google')\ngeocode(enc2utf8('서울'), source = 'google', output = 'latlona')\ngeocode(enc2utf8('서울&language=ko'), source = 'google', output = 'latlona')\n\n#mutate_geocode(data.frame, address_column_name, source = 'google')\nstation_list = c('시청역', '을지로입구역', '을지로3가역', '을지로4가역', \n                 '동대문역사문화공원역', '신당역', '상왕십리역', '왕십리역', '한양대역', \n                 '뚝섬역', '성수역', '건대입구역', '구의역', '강변역', '잠실나루역', \n                 '잠실역', '신천역', '종합운동장역', '삼성역', '선릉역', '역삼역', \n                 '강남역', '2호선 교대역', '서초역', '방배역', '사당역', '낙성대역', \n                 '서울대입구역', '봉천역', '신림역', '신대방역', '구로디지털단지역', \n                 '대림역', '신도림역', '문래역', '영등포구청역', '당산역', '합정역', \n                 '홍대입구역', '신촌역', '이대역', '아현역', '충정로역')\nstation_df = data.frame(station_list, stringsAsFactors = FALSE)\nstation_df$station_list = enc2utf8(station_df$station_list)\nstation_lonlat = mutate_geocode(station_df, station_list, source = 'google')\nstation_lonlat\n\nqmap('seoul', zoom = 11)\nqmap('seoul', zoom = 11, color = 'bw')\nqmap('seoul', zoom = 11, maptype = 'roadmap')\nqmap('seoul', zoom = 11, maptype = 'satellite')\nqmap('seoul', zoom = 11, maptype = 'hybrid')\n\nqmap('seoul', zoom = 11, source = 'stamen', maptype = 'watercolor')\nqmap('seoul', zoom = 11, source = 'stamen', maptype = 'toner')\n\nseoul_lonlat = unlist(geocode('seoul', source = 'google'))\nqmap(seoul_lonlat, zoom = 11, source = 'stamen', maptype = 'toner')\n\nseoul_map <- qmap('Seoul', zoom = 11, source = 'stamen', maptype = 'toner')\nseoul_map + geom_point(data = station_lonlat, aes(x = lon, y = lat), colour = 'green',\n                       size = 4)\n\nwifi_data = read.csv('wifi_data.csv', encoding = 'utf-8', stringsAsFactors = FALSE)\nseoul_map + geom_point(data = wifi_data, aes(x = lon, y = lat)) + facet_wrap(~div)\nseoul_map + \n  geom_polygon(data = wifi_data, aes(x = lon, y = lat, fill = ..level..), \n               stat = 'density2d', alpha = 0.3) + \n  scale_fill_gradient(low = '#C6DBEF', high = '#08306B') + \n  facet_wrap(~div)\n\n#install.packages('leaflet')\nlibrary(leaflet)\n\nleaflet(wifi_data) %>% \n  setView(lng = seoul_lonlat[1], \n          lat = seoul_lonlat[2], \n          zoom = 11) %>% \n  addTiles() %>% \n  addCircles(lng = ~lon, lat = ~lat)\nleaflet(wifi_data) %>% \n  setView(lng = seoul_lonlat[1], lat = seoul_lonlat[2], zoom = 11) %>% \n  addProviderTiles('Stamen.Toner') %>% \n  addCircles(lng = ~lon, lat = ~lat)\nleaflet(wifi_data) %>% \n  setView(lng = seoul_lonlat[1], lat = seoul_lonlat[2], zoom = 11) %>% \n  addProviderTiles('CartoDB.Positron') %>% \n  addCircles(lng = ~lon, lat = ~lat)\n\nleaflet(wifi_data) %>% \n  setView(lng = seoul_lonlat[1], lat = seoul_lonlat[2], zoom = 11) %>% \n  addProviderTiles('Stamen.Toner') %>% \n  addCircles(lng = ~lon, lat = ~lat, popup = ~div)\n\n#install.packages('networkD3')\nlibrary(networkD3)\ndata(MisLinks, MisNodes)\nforceNetwork(Links = MisLinks, Nodes = MisNodes, Source = 'source', Target = 'target', \n             Value = 'value', NodeID = 'name', Group = 'group', opacity = 0.6)\n\n#install.packages('d3heatmap')\nlibrary(d3heatmap)\nd3heatmap(mtcars, scale = \"column\", colors = \"Blues\")\n\n#install.packages('DT')\nlibrary(DT)\ndatatable(iris)\n",
    "created" : 1442977063328.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1881979089",
    "id" : "ABC8A1E3",
    "lastKnownWriteTime" : 1442984525,
    "path" : "~/Library/Mobile Documents/com~apple~CloudDocs/GitHub/R_dreaming/Day09_01.R",
    "project_path" : "Day09_01.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}